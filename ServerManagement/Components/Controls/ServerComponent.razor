@inject NavigationManager NavigationManager

@if (Server is not null)
{
    <li @key="Server.Id">
        @Server.Name in @Server.City is
        <span style="color: @(Server.IsOnline? "green" : "red")">
            @(Server.IsOnline ? "online" : "offline")
        </span>
        &nbsp;
           
        &nbsp;
        @if(Server.IsOnline)
        {
            Random random = new Random();
            int randomNumber = random.Next(1,50);
            <text>@randomNumber</text>
            <button 
                type="button" 
                class="btn btn-outline-danger" @onclick="@(() => {Server.IsOnline = false;})">
                Turn Off
            </button>
        }
        else
        {
            <text>N/A</text>
            <button type="button"
                    class="btn btn-outline-success" @onclick="@(() => {Server.IsOnline = true;})">
                Turn On
            </button>
        }
        &nbsp;
        <a href="/Servers/@Server.Id" class="link-primary">Edit</a>
        &nbsp;
        <EditForm Model="Server"
                  FormName="@($"form-Server-{Server.Id}")"
                  OnValidSubmit="@(() =>{DeleteServer(Server.Id); })">
            <button type="submit" class="btn btn-primary">Delete</button>
        </EditForm>
    </li>
}
@code {

    [Parameter]
    public Server Server { get; set; }


    private void DeleteServer(int ServerId)
    {
        if (ServerId > 0)
        {
            ServersRepository.DeleteServer(ServerId);
            NavigationManager.NavigateTo("/Servers", true);
        }
    }

}
